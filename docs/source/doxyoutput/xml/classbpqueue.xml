<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbpqueue" kind="class" language="C++" prot="public">
    <compoundname>bpqueue</compoundname>
    <includes refid="bpqueue_8hpp" local="no">bpqueue.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classbpqueue_1a0f2230be24f85c20a41e9eb5657cc0aa" prot="public" static="no">
        <type>boost::coroutines2::coroutine&lt; <ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp; &gt;</type>
        <definition>using bpqueue&lt; T &gt;::coro_t =  boost::coroutines2::coroutine&lt;dllink&lt;T&gt;&amp;&gt;</definition>
        <argsstring></argsstring>
        <name>coro_t</name>
        <briefdescription>
<para>iterator point to begin </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>bpq_iterator</para></simplesect>
iterator point to end</para><para><simplesect kind="return"><para>bpq_iterator </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="268" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classbpqueue_1ac9ef545c985941e763553afbf3504a99" prot="public" static="no">
        <type>typename coro_t::pull_type</type>
        <definition>using bpqueue&lt; T &gt;::pull_t =  typename coro_t::pull_type</definition>
        <argsstring></argsstring>
        <name>pull_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="269" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="269" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classbpqueue_1a226ea4392314824e02ecca9ddc10397f" prot="private" static="yes" mutable="no">
        <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt;</type>
        <definition>dllink&lt; T &gt; bpqueue&lt; T &gt;::sentinel</definition>
        <argsstring></argsstring>
        <name>sentinel</name>
        <initializer>{}</initializer>
        <briefdescription>
<para>sentinel </para>        </briefdescription>
        <detaileddescription>
<para>sentinel</para><para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="30" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classbpqueue_1a2b73291b59f4610484a877efbfa23add" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T bpqueue&lt; T &gt;::max</definition>
        <argsstring></argsstring>
        <name>max</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>max value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="33" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbpqueue_1a6e70892011d25f7d8144064bd0d841f9" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T bpqueue&lt; T &gt;::offset</definition>
        <argsstring></argsstring>
        <name>offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a - 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="34" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbpqueue_1af6afb7327ae56f77f4c5e20092094ba0" prot="private" static="no" mutable="no">
        <type>T</type>
        <definition>T bpqueue&lt; T &gt;::high</definition>
        <argsstring></argsstring>
        <name>high</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>b - a + 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="35" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classbpqueue_1a3dbc278c7c35c253e495d39392b92b98" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &gt;</type>
        <definition>std::vector&lt;dllink&lt;T&gt; &gt; bpqueue&lt; T &gt;::bucket</definition>
        <argsstring></argsstring>
        <name>bucket</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bucket, array of lists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="36" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbpqueue_1af7a7b0743252b4e19553be511c118d54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bpqueue&lt; T &gt;::bpqueue</definition>
        <argsstring>(T a, T b)</argsstring>
        <name>bpqueue</name>
        <param>
          <type>T</type>
          <declname>a</declname>
        </param>
        <param>
          <type>T</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>Construct a new bpqueue object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>lower bound </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>upper bound </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="45" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="45" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a59602de1245c1f688a7bf1d8a05dc81d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::set_key</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it, T gain) -&gt; void</argsstring>
        <name>set_key</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>T</type>
          <declname>gain</declname>
        </param>
        <briefdescription>
<para>Set the key object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>gain</parametername>
</parameternamelist>
<parameterdescription>
<para>the key of it </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="61" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="61" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1ac794c898cbe56edce4c743c5404aa2cb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::get_max</definition>
        <argsstring>() const -&gt; T</argsstring>
        <name>get_max</name>
        <briefdescription>
<para>Get the max value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>T maximum value </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="71" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="71" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1ae567d6616c857d5db70adb548e1e408f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::is_empty</definition>
        <argsstring>() const -&gt; bool</argsstring>
        <name>is_empty</name>
        <briefdescription>
<para>whether empty </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true </para></simplesect>
<simplesect kind="return"><para>false </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="82" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a51214d69a655d5dbabeb9825e697019c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::clear</definition>
        <argsstring>() -&gt; void</argsstring>
        <name>clear</name>
        <briefdescription>
<para>clear reset the PQ </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="90" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1afa08156b563cbdf180cc7eda71b52e66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::append_direct</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it) -&gt; void</argsstring>
        <name>append_direct</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>append item with internal key </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="104" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="104" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1acab256d1c827d2b073e855e71b008b52" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::append</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it, T k) -&gt; void</argsstring>
        <name>append</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>T</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>append item with external key </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the key </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="116" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="116" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a4b692df324c890703d4d8d330f3198fa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::appendfrom</definition>
        <argsstring>(std::vector&lt; dllink&lt; T &gt;&gt; &amp;nodes) -&gt; void</argsstring>
        <name>appendfrom</name>
        <param>
          <type>std::vector&lt; <ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt;&gt; &amp;</type>
          <declname>nodes</declname>
        </param>
        <briefdescription>
<para>append from list </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>keys</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="133" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="133" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a19f95094d34339fd44afb8978d8f606a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::popleft</definition>
        <argsstring>() -&gt; dllink&lt; T &gt; &amp;</argsstring>
        <name>popleft</name>
        <briefdescription>
<para>pop node with the highest key </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>dllink&amp; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="153" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="153" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a5051906924b30e577303c608be6f50fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::decrease_key</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it, T delta) -&gt; void</argsstring>
        <name>decrease_key</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>T</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>decrease key by delta </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the change of the key</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that the order of items with same key will not be preserved. For FM algorithm, this is a prefered behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="172" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="172" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a42e14d8f722240389a7028486cdb93ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::increase_key</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it, T delta) -&gt; void</argsstring>
        <name>increase_key</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>T</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>increase key by delta </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the change of the key</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that the order of items with same key will not be preserved. For FM algorithm, this is a prefered behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="200" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="200" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1aeb2317b6c333e3f1d12e2f1b3b3628db" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::modify_key</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it, T delta) -&gt; void</argsstring>
        <name>modify_key</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <param>
          <type>T</type>
          <declname>delta</declname>
        </param>
        <briefdescription>
<para>modify key by delta </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta</parametername>
</parameternamelist>
<parameterdescription>
<para>the change of the key</para></parameterdescription>
</parameteritem>
</parameterlist>
Note that the order of items with same key will not be preserved. For FM algorithm, this is a prefered behavior. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="223" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="223" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1af6eaf3ebe97a66e61c8d3c10d3eabb49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::detach</definition>
        <argsstring>(dllink&lt; T &gt; &amp;it) -&gt; void</argsstring>
        <name>detach</name>
        <param>
          <type><ref refid="structdllink" kindref="compound">dllink</ref>&lt; T &gt; &amp;</type>
          <declname>it</declname>
        </param>
        <briefdescription>
<para>detach the item from bpqueue </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>it</parametername>
</parameternamelist>
<parameterdescription>
<para>the item </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="244" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="244" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classbpqueue_1a7025df7d5ce7ea13b426de07634bbefc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto bpqueue&lt; T &gt;::items</definition>
        <argsstring>() -&gt; pull_t</argsstring>
        <name>items</name>
        <briefdescription>
<para>item generator </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>pull_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="276" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="276" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>bounded priority queue </para>    </briefdescription>
    <detaileddescription>
<para>Bounded Priority Queue with integer keys in [a..b]. Implemented by array (bucket) of doubly-linked lists. Efficient if key is bounded by a small integer value.</para><para>Note that this class does not own the PQ nodes. This feature makes the nodes sharable between doubly linked list class and this class. In the FM algorithm, the node either attached to the gain buckets (PQ) or in the waitinglist (doubly linked list), but not in both of them in the same time.</para><para>Another improvement is to make the array size one element bigger i.e. (b - a + 2). The extra dummy array element (which is called sentinel) is used to reduce the boundary checking during updating.</para><para>All the member functions assume that the keys are within the bound. </para>    </detaileddescription>
    <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" line="29" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/bpqueue.hpp" bodystart="28" bodyend="294"/>
    <listofallmembers>
      <member refid="classbpqueue_1acab256d1c827d2b073e855e71b008b52" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>append</name></member>
      <member refid="classbpqueue_1afa08156b563cbdf180cc7eda71b52e66" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>append_direct</name></member>
      <member refid="classbpqueue_1a4b692df324c890703d4d8d330f3198fa" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>appendfrom</name></member>
      <member refid="classbpqueue_1af7a7b0743252b4e19553be511c118d54" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>bpqueue</name></member>
      <member refid="classbpqueue_1a3dbc278c7c35c253e495d39392b92b98" prot="private" virt="non-virtual"><scope>bpqueue</scope><name>bucket</name></member>
      <member refid="classbpqueue_1a51214d69a655d5dbabeb9825e697019c" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>clear</name></member>
      <member refid="classbpqueue_1a0f2230be24f85c20a41e9eb5657cc0aa" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>coro_t</name></member>
      <member refid="classbpqueue_1a5051906924b30e577303c608be6f50fe" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>decrease_key</name></member>
      <member refid="classbpqueue_1af6eaf3ebe97a66e61c8d3c10d3eabb49" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>detach</name></member>
      <member refid="classbpqueue_1ac794c898cbe56edce4c743c5404aa2cb" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>get_max</name></member>
      <member refid="classbpqueue_1af6afb7327ae56f77f4c5e20092094ba0" prot="private" virt="non-virtual"><scope>bpqueue</scope><name>high</name></member>
      <member refid="classbpqueue_1a42e14d8f722240389a7028486cdb93ed" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>increase_key</name></member>
      <member refid="classbpqueue_1ae567d6616c857d5db70adb548e1e408f" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>is_empty</name></member>
      <member refid="classbpqueue_1a7025df7d5ce7ea13b426de07634bbefc" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>items</name></member>
      <member refid="classbpqueue_1a2b73291b59f4610484a877efbfa23add" prot="private" virt="non-virtual"><scope>bpqueue</scope><name>max</name></member>
      <member refid="classbpqueue_1aeb2317b6c333e3f1d12e2f1b3b3628db" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>modify_key</name></member>
      <member refid="classbpqueue_1a6e70892011d25f7d8144064bd0d841f9" prot="private" virt="non-virtual"><scope>bpqueue</scope><name>offset</name></member>
      <member refid="classbpqueue_1a19f95094d34339fd44afb8978d8f606a" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>popleft</name></member>
      <member refid="classbpqueue_1ac9ef545c985941e763553afbf3504a99" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>pull_t</name></member>
      <member refid="classbpqueue_1a226ea4392314824e02ecca9ddc10397f" prot="private" virt="non-virtual"><scope>bpqueue</scope><name>sentinel</name></member>
      <member refid="classbpqueue_1a59602de1245c1f688a7bf1d8a05dc81d" prot="public" virt="non-virtual"><scope>bpqueue</scope><name>set_key</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
