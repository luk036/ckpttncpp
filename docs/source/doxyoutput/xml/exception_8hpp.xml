<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="exception_8hpp" kind="file" language="C++">
    <compoundname>exception.hpp</compoundname>
    <includes local="no">exception</includes>
    <includes local="no">initializer_list</includes>
    <includes local="no">stdexcept</includes>
    <incdepgraph>
      <node id="414">
        <label>/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/xnetwork/exception.hpp</label>
        <link refid="exception_8hpp"/>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
        <childnode refid="417" relation="include">
        </childnode>
      </node>
      <node id="417">
        <label>stdexcept</label>
      </node>
      <node id="415">
        <label>exception</label>
      </node>
      <node id="416">
        <label>initializer_list</label>
      </node>
    </incdepgraph>
    <innerclass refid="structxn_1_1XNetworkException" prot="public">xn::XNetworkException</innerclass>
    <innerclass refid="structxn_1_1XNetworkError" prot="public">xn::XNetworkError</innerclass>
    <innerclass refid="structxn_1_1XNetworkPointlessConcept" prot="public">xn::XNetworkPointlessConcept</innerclass>
    <innerclass refid="structxn_1_1XNetworkAlgorithmError" prot="public">xn::XNetworkAlgorithmError</innerclass>
    <innerclass refid="structxn_1_1XNetworkUnfeasible" prot="public">xn::XNetworkUnfeasible</innerclass>
    <innerclass refid="structxn_1_1XNetworkNoPath" prot="public">xn::XNetworkNoPath</innerclass>
    <innerclass refid="structxn_1_1XNetworkNoCycle" prot="public">xn::XNetworkNoCycle</innerclass>
    <innerclass refid="structxn_1_1HasACycle" prot="public">xn::HasACycle</innerclass>
    <innerclass refid="structxn_1_1XNetworkUnbounded" prot="public">xn::XNetworkUnbounded</innerclass>
    <innerclass refid="structxn_1_1XNetworkNotImplemented" prot="public">xn::XNetworkNotImplemented</innerclass>
    <innerclass refid="structxn_1_1NodeNotFound" prot="public">xn::NodeNotFound</innerclass>
    <innerclass refid="structxn_1_1AmbiguousSolution" prot="public">xn::AmbiguousSolution</innerclass>
    <innerclass refid="structxn_1_1ExceededMaxIterations" prot="public">xn::ExceededMaxIterations</innerclass>
    <innernamespace refid="namespacexn">xn</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>-*-<sp/>coding:<sp/>utf-8<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_HOME_UBUNTU_GITHUB_XNETWORK_EXCEPTION_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_HOME_UBUNTU_GITHUB_XNETWORK_EXCEPTION_HPP<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;initializer_list&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacexn" kindref="compound">xn</ref></highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="comment">//<sp/>static<sp/>const<sp/>auto<sp/>__all__<sp/>=<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;HasACycle&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;NodeNotFound&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;PowerIterationFailedConvergence&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;ExceededMaxIterations&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;AmbiguousSolution&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkAlgorithmError&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkException&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkError&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkNoCycle&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkNoPath&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkNotImplemented&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkPointlessConcept&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkUnbounded&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>&quot;XNetworkUnfeasible&quot;,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="structxn_1_1XNetworkException" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref><sp/>:<sp/>std::runtime_error</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>std::runtime_error(msg)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="44"><highlight class="normal">};</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="structxn_1_1XNetworkError" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkError" kindref="compound">XNetworkError</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkError" kindref="compound">XNetworkError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal">};</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="68" refid="structxn_1_1XNetworkPointlessConcept" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkPointlessConcept" kindref="compound">XNetworkPointlessConcept</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkPointlessConcept" kindref="compound">XNetworkPointlessConcept</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal">};</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="structxn_1_1XNetworkAlgorithmError" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">};</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="structxn_1_1XNetworkUnfeasible" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref></highlight></codeline>
<codeline lineno="88"><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref>(msg)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal">};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="structxn_1_1XNetworkNoPath" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkNoPath" kindref="compound">XNetworkNoPath</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref></highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkNoPath" kindref="compound">XNetworkNoPath</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref>(msg)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="107" refid="structxn_1_1XNetworkNoCycle" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkNoCycle" kindref="compound">XNetworkNoCycle</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref></highlight></codeline>
<codeline lineno="108"><highlight class="normal">{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkNoCycle" kindref="compound">XNetworkNoCycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkUnfeasible" kindref="compound">XNetworkUnfeasible</ref>(msg)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal">};</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="structxn_1_1HasACycle" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1HasACycle" kindref="compound">HasACycle</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1HasACycle" kindref="compound">HasACycle</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structxn_1_1XNetworkUnbounded" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkUnbounded" kindref="compound">XNetworkUnbounded</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref></highlight></codeline>
<codeline lineno="128"><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkUnbounded" kindref="compound">XNetworkUnbounded</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkAlgorithmError" kindref="compound">XNetworkAlgorithmError</ref>(msg)</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="structxn_1_1XNetworkNotImplemented" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1XNetworkNotImplemented" kindref="compound">XNetworkNotImplemented</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="137"><highlight class="normal">{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1XNetworkNotImplemented" kindref="compound">XNetworkNotImplemented</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="structxn_1_1NodeNotFound" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1NodeNotFound" kindref="compound">NodeNotFound</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1NodeNotFound" kindref="compound">NodeNotFound</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal">};</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="structxn_1_1AmbiguousSolution" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1AmbiguousSolution" kindref="compound">AmbiguousSolution</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1AmbiguousSolution" kindref="compound">AmbiguousSolution</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structxn_1_1ExceededMaxIterations" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structxn_1_1ExceededMaxIterations" kindref="compound">ExceededMaxIterations</ref><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref></highlight></codeline>
<codeline lineno="175"><highlight class="normal">{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structxn_1_1ExceededMaxIterations" kindref="compound">ExceededMaxIterations</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>msg)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structxn_1_1XNetworkException" kindref="compound">XNetworkException</ref>(msg)</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal">};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>/**<sp/>Raised<sp/>when<sp/>the<sp/>power<sp/>iteration<sp/>method<sp/>fails<sp/>to<sp/>converge<sp/>within<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>specified<sp/>iteration<sp/>limit.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>`num_iterations`<sp/>is<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>that<sp/>have<sp/>been</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>completed<sp/>when<sp/>this<sp/>exception<sp/>was<sp/>raised.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>PowerIterationFailedConvergence<sp/>:<sp/>ExceededMaxIterations<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>explicit<sp/>_Self(<sp/>num_iterations,<sp/>*args,<sp/>**kw)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>auto<sp/>msg<sp/>=<sp/>&quot;power<sp/>iteration<sp/>failed<sp/>to<sp/>converge<sp/>within<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations&quot;;<sp/>exception_message<sp/>=<sp/>msg.format(num_iterations);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>superinit<sp/>=<sp/>super(PowerIterationFailedConvergence,<sp/>*this).__init__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>superinit(<sp/>exception_message,<sp/>*args,<sp/>**kw);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal">};<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>xn</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/xnetwork/exception.hpp"/>
  </compounddef>
</doxygen>
