<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structFMBiConstrMgr" kind="struct" language="C++" prot="public">
    <compoundname>FMBiConstrMgr</compoundname>
    <basecompoundref refid="classFMConstrMgr" prot="public" virt="non-virtual">FMConstrMgr</basecompoundref>
    <includes refid="FMBiConstrMgr_8hpp" local="no">FMBiConstrMgr.hpp</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structFMBiConstrMgr_1a1bd9ca0dc8ff55a02c1f02010c6d50f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FMBiConstrMgr::FMBiConstrMgr</definition>
        <argsstring>(SimpleNetlist &amp;H, double BalTol)</argsstring>
        <name>FMBiConstrMgr</name>
        <param>
          <type><ref refid="structNetlist" kindref="compound">SimpleNetlist</ref> &amp;</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double</type>
          <declname>BalTol</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structFMBiConstrMgr" kindref="compound">FMBiConstrMgr</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BalTol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" line="18" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" bodystart="18" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="structFMBiConstrMgr_1a0b04c106d47de41fd21cdfb4403bfa97" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>FMBiConstrMgr::FMBiConstrMgr</definition>
        <argsstring>(SimpleNetlist &amp;H, double BalTol, uint8_t)</argsstring>
        <name>FMBiConstrMgr</name>
        <param>
          <type><ref refid="structNetlist" kindref="compound">SimpleNetlist</ref> &amp;</type>
          <declname>H</declname>
        </param>
        <param>
          <type>double</type>
          <declname>BalTol</declname>
        </param>
        <param>
          <type>uint8_t</type>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structFMBiConstrMgr" kindref="compound">FMBiConstrMgr</ref> object (for general framework) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>H</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>BalTol</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>K</parametername>
</parameternamelist>
<parameterdescription>
<para>(for compatability only) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" line="30" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" bodystart="30" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="structFMBiConstrMgr_1a1b683ccc831157b42d19587fac75f9f2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto FMBiConstrMgr::select_togo</definition>
        <argsstring>() const -&gt; uint8_t</argsstring>
        <name>select_togo</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>uint8_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" line="40" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" bodystart="40" bodyend="43"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Constraint Manager. </para>    </briefdescription>
    <detaileddescription>
<para>Check if (the move of v can satisfied, makebetter, or notsatisfied </para>    </detaileddescription>
    <inheritancegraph>
      <node id="32">
        <label>FMBiConstrMgr</label>
        <link refid="structFMBiConstrMgr"/>
        <childnode refid="33" relation="public-inheritance">
        </childnode>
      </node>
      <node id="33">
        <label>FMConstrMgr</label>
        <link refid="classFMConstrMgr"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="46">
        <label>std::unordered_map&lt; node_t, index_t &gt;</label>
      </node>
      <node id="37">
        <label>xn::Graph&lt; nodeview_t, nodemap_t &gt;</label>
        <link refid="classxn_1_1Graph"/>
        <childnode refid="38" relation="public-inheritance">
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>_node</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>_node_map</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>graph</edgelabel>
        </childnode>
      </node>
      <node id="47">
        <label>py::dict&lt; index_t, node_t &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="48" relation="public-inheritance">
        </childnode>
      </node>
      <node id="44">
        <label>std::unordered_set&lt; node_t  &gt;</label>
      </node>
      <node id="41">
        <label>nodeview_t</label>
      </node>
      <node id="38">
        <label>xn::object</label>
        <link refid="structxn_1_1object"/>
        <childnode refid="39" relation="public-inheritance">
        </childnode>
      </node>
      <node id="42">
        <label>nodemap_t</label>
      </node>
      <node id="34">
        <label>FMBiConstrMgr</label>
        <link refid="structFMBiConstrMgr"/>
        <childnode refid="35" relation="public-inheritance">
        </childnode>
      </node>
      <node id="40">
        <label>std::unordered_map&lt; const char *, std::any &gt;</label>
      </node>
      <node id="43">
        <label>py::set&lt; node_t &gt;</label>
        <link refid="classpy_1_1set"/>
        <childnode refid="44" relation="public-inheritance">
        </childnode>
      </node>
      <node id="39">
        <label>py::dict&lt; const char *, std::any &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="40" relation="public-inheritance">
        </childnode>
      </node>
      <node id="45">
        <label>py::dict&lt; node_t, index_t &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="46" relation="public-inheritance">
        </childnode>
      </node>
      <node id="36">
        <label>Netlist&lt; nodeview_t, nodemap_t &gt;</label>
        <link refid="structNetlist"/>
        <childnode refid="37" relation="usage">
          <edgelabel>G</edgelabel>
        </childnode>
        <childnode refid="41" relation="usage">
          <edgelabel>nets</edgelabel>
          <edgelabel>modules</edgelabel>
        </childnode>
        <childnode refid="43" relation="usage">
          <edgelabel>module_fixed</edgelabel>
        </childnode>
        <childnode refid="45" relation="usage">
          <edgelabel>node_up_map</edgelabel>
        </childnode>
        <childnode refid="47" relation="usage">
          <edgelabel>node_down_map</edgelabel>
          <edgelabel>cluster_down_map</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>module_map</edgelabel>
        </childnode>
      </node>
      <node id="35">
        <label>FMConstrMgr</label>
        <link refid="classFMConstrMgr"/>
        <childnode refid="36" relation="usage">
          <edgelabel>H</edgelabel>
        </childnode>
      </node>
      <node id="48">
        <label>std::unordered_map&lt; index_t , node_t  &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" line="11" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/FMBiConstrMgr.hpp" bodystart="10" bodyend="44"/>
    <listofallmembers>
      <member refid="classFMConstrMgr_1ae4387efb5b96f9a17d386e0a863af8b0" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>BalTol</name></member>
      <member refid="classFMConstrMgr_1a951a868885eaecdf750aef3fed0c92fe" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>check_constraints</name></member>
      <member refid="classFMConstrMgr_1abb7ab7430e60bdf40e64f836f486b011" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>check_legal</name></member>
      <member refid="classFMConstrMgr_1a1cac597280cf6ff2f847ed388113c05a" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>diff</name></member>
      <member refid="structFMBiConstrMgr_1a1bd9ca0dc8ff55a02c1f02010c6d50f5" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>FMBiConstrMgr</name></member>
      <member refid="structFMBiConstrMgr_1a0b04c106d47de41fd21cdfb4403bfa97" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>FMBiConstrMgr</name></member>
      <member refid="classFMConstrMgr_1ac6326f062b0c4c757f171d8423f645c0" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>FMConstrMgr</name></member>
      <member refid="classFMConstrMgr_1a51b7f585819ee6d011f513effdb40829" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>H</name></member>
      <member refid="classFMConstrMgr_1ab70f6dafede28e237cb8301de1543d46" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>init</name></member>
      <member refid="classFMConstrMgr_1a2cd10def51f15c789ac166ba54ef2390" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>K</name></member>
      <member refid="classFMConstrMgr_1a204edb066874ced1010fc12044b60e45" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>lowerbound</name></member>
      <member refid="structFMBiConstrMgr_1a1b683ccc831157b42d19587fac75f9f2" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>select_togo</name></member>
      <member refid="classFMConstrMgr_1aca29065085facd555e7b42e4ecae7c55" prot="protected" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>totalweight</name></member>
      <member refid="classFMConstrMgr_1a60ee5ff96c0ec1879229fe262581afcf" prot="public" virt="non-virtual"><scope>FMBiConstrMgr</scope><name>update_move</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
