<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="structNetlist" kind="struct" language="C++" prot="public">
    <compoundname>Netlist</compoundname>
    <includes refid="netlist_8hpp" local="no">netlist.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename</type>
        <declname>nodeview_t</declname>
        <defname>nodeview_t</defname>
      </param>
      <param>
        <type>typename</type>
        <declname>nodemap_t</declname>
        <defname>nodemap_t</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structNetlist_1a3398076ea8fced0b669d842494d37bbe" prot="public" static="no">
        <type>typename nodeview_t::value_type</type>
        <definition>using Netlist&lt; nodeview_t, nodemap_t &gt;::node_t =  typename nodeview_t::value_type</definition>
        <argsstring></argsstring>
        <name>node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="29" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structNetlist_1aeb21bf1fe4450507103a34030a5a8e4b" prot="public" static="no">
        <type>typename nodemap_t::value_type</type>
        <definition>using Netlist&lt; nodeview_t, nodemap_t &gt;::index_t =  typename nodemap_t::value_type</definition>
        <argsstring></argsstring>
        <name>index_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="30" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="structNetlist_1a7d521881f10cd7d43aca1d91a3d73e3e" prot="public" static="no">
        <type><ref refid="classxn_1_1Graph" kindref="compound">xn::Graph</ref>&lt; nodeview_t, nodemap_t &gt;</type>
        <definition>using Netlist&lt; nodeview_t, nodemap_t &gt;::graph_t =  xn::Graph&lt;nodeview_t, nodemap_t&gt;</definition>
        <argsstring></argsstring>
        <name>graph_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="31" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structNetlist_1a0a618339a3a4460512ad579fedaa9687" prot="public" static="no" mutable="no">
        <type><ref refid="classxn_1_1Graph" kindref="compound">graph_t</ref></type>
        <definition>graph_t Netlist&lt; nodeview_t, nodemap_t &gt;::G</definition>
        <argsstring></argsstring>
        <name>G</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="33" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1af12f7838a6564bff0eb2b78141ed0aab" prot="public" static="no" mutable="no">
        <type>nodeview_t</type>
        <definition>nodeview_t Netlist&lt; nodeview_t, nodemap_t &gt;::modules</definition>
        <argsstring></argsstring>
        <name>modules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="34" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a576d01038432710d1577bb04cbb14606" prot="public" static="no" mutable="no">
        <type>nodeview_t</type>
        <definition>nodeview_t Netlist&lt; nodeview_t, nodemap_t &gt;::nets</definition>
        <argsstring></argsstring>
        <name>nets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="35" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1ab8941d35dbf7f69656e971fedfd1e6a7" prot="public" static="no" mutable="no">
        <type>nodemap_t</type>
        <definition>nodemap_t Netlist&lt; nodeview_t, nodemap_t &gt;::module_map</definition>
        <argsstring></argsstring>
        <name>module_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="36" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1aefc9092190d109d97412ad54a6447d22" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Netlist&lt; nodeview_t, nodemap_t &gt;::num_modules</definition>
        <argsstring></argsstring>
        <name>num_modules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="38" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1aa2aba7e79db50af55a2444034e286439" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Netlist&lt; nodeview_t, nodemap_t &gt;::num_nets</definition>
        <argsstring></argsstring>
        <name>num_nets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="39" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1ae42f6ee8ccbf9803db680004451cf593" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Netlist&lt; nodeview_t, nodemap_t &gt;::num_pads</definition>
        <argsstring></argsstring>
        <name>num_pads</name>
        <initializer>= 0U</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="40" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a973d4ee185bbae7699b17f68b3d5fbe9" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Netlist&lt; nodeview_t, nodemap_t &gt;::max_degree</definition>
        <argsstring></argsstring>
        <name>max_degree</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="41" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a09c473422ba65c7da98bdd82804280cf" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t Netlist&lt; nodeview_t, nodemap_t &gt;::max_net_degree</definition>
        <argsstring></argsstring>
        <name>max_net_degree</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="42" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a752a1c071aba380890b4fbc3a158464c" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Netlist&lt; nodeview_t, nodemap_t &gt;::has_fixed_modules</definition>
        <argsstring></argsstring>
        <name>has_fixed_modules</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="43" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1aeb5e40a9483ffe02e7e1d41cb33eab25" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t Netlist&lt; nodeview_t, nodemap_t &gt;::cost_model</definition>
        <argsstring></argsstring>
        <name>cost_model</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="44" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1ae1cb24c1c567ec7c7466d775a3f285a0" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::module_weight</definition>
        <argsstring></argsstring>
        <name>module_weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="45" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a610efd394015a1def21f15b5e82414f7" prot="public" static="no" mutable="no">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt;int&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::net_weight</definition>
        <argsstring></argsstring>
        <name>net_weight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="46" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a8cb2a3e85767c3d3f88bfa8e7b609b4e" prot="public" static="no" mutable="no">
        <type><ref refid="classpy_1_1set" kindref="compound">py::set</ref>&lt; node_t &gt;</type>
        <definition>py::set&lt;node_t&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::module_fixed</definition>
        <argsstring></argsstring>
        <name>module_fixed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="47" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1ae9addfb366296964d2466864a228b89f" prot="public" static="no" mutable="no">
        <type><ref refid="structNetlist" kindref="compound">Netlist</ref>&lt; nodeview_t, nodemap_t &gt; *</type>
        <definition>Netlist&lt;nodeview_t, nodemap_t&gt;* Netlist&lt; nodeview_t, nodemap_t &gt;::parent</definition>
        <argsstring></argsstring>
        <name>parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="50" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1aff5dd1ecd49a357d4117e5286bc66c9f" prot="public" static="no" mutable="no">
        <type><ref refid="classpy_1_1dict" kindref="compound">py::dict</ref>&lt; node_t, index_t &gt;</type>
        <definition>py::dict&lt;node_t, index_t&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::node_up_map</definition>
        <argsstring></argsstring>
        <name>node_up_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="51" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1aeaf08cf2962212cbbbbdd82fa34370ee" prot="public" static="no" mutable="no">
        <type><ref refid="classpy_1_1dict" kindref="compound">py::dict</ref>&lt; index_t, node_t &gt;</type>
        <definition>py::dict&lt;index_t, node_t&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::node_down_map</definition>
        <argsstring></argsstring>
        <name>node_down_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="52" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structNetlist_1a8d56c1ac4b5e410083e2a8a2f3bf4e27" prot="public" static="no" mutable="no">
        <type><ref refid="classpy_1_1dict" kindref="compound">py::dict</ref>&lt; index_t, node_t &gt;</type>
        <definition>py::dict&lt;index_t, node_t&gt; Netlist&lt; nodeview_t, nodemap_t &gt;::cluster_down_map</definition>
        <argsstring></argsstring>
        <name>cluster_down_map</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="53" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="53" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structNetlist_1a5e37df4e70871080e039bc333f0f8059" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Netlist&lt; nodeview_t, nodemap_t &gt;::Netlist</definition>
        <argsstring>(graph_t &amp;&amp;G, const nodeview_t &amp;modules, const nodeview_t &amp;nets, const nodemap_t &amp;module_map)</argsstring>
        <name>Netlist</name>
        <param>
          <type><ref refid="classxn_1_1Graph" kindref="compound">graph_t</ref> &amp;&amp;</type>
          <declname>G</declname>
        </param>
        <param>
          <type>const nodeview_t &amp;</type>
          <declname>modules</declname>
        </param>
        <param>
          <type>const nodeview_t &amp;</type>
          <declname>nets</declname>
        </param>
        <param>
          <type>const nodemap_t &amp;</type>
          <declname>module_map</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structNetlist" kindref="compound">Netlist</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module_list</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_list</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module_fixed</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="63" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="204" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a2b58c519ca5858ffaba288d753e01d11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Netlist&lt; nodeview_t, nodemap_t &gt;::Netlist</definition>
        <argsstring>(graph_t &amp;&amp;G, size_t num_modules, size_t num_nets)</argsstring>
        <name>Netlist</name>
        <param>
          <type><ref refid="classxn_1_1Graph" kindref="compound">graph_t</ref> &amp;&amp;</type>
          <declname>G</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_modules</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>num_nets</declname>
        </param>
        <briefdescription>
<para>Construct a new <ref refid="structNetlist" kindref="compound">Netlist</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>G</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module_list</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>net_list</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>module_fixed</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="74" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="226" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a95539d9ee2a37778d98a227807c87463" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::number_of_modules</definition>
        <argsstring>() const -&gt; size_t</argsstring>
        <name>number_of_modules</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="81" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1ae8d9cbdede320c06248a44e9b492d3c4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::number_of_nets</definition>
        <argsstring>() const -&gt; size_t</argsstring>
        <name>number_of_nets</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="91" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a2030766bdbe5582228f08d4dd40f0162" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::number_of_nodes</definition>
        <argsstring>() const -&gt; size_t</argsstring>
        <name>number_of_nodes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="101" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a5bbb91bea16e39dc6482f881087d034c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::get_max_degree</definition>
        <argsstring>() const -&gt; size_t</argsstring>
        <name>get_max_degree</name>
        <briefdescription>
<para>Get the max degree. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_t</para></simplesect>
<simplesect kind="return"><para>index_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="119" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="119" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a2b21ee258e768954f1cbd727d0999e4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::get_max_net_degree</definition>
        <argsstring>() const -&gt; size_t</argsstring>
        <name>get_max_net_degree</name>
        <briefdescription>
<para>Get the max net degree. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>index_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="129" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="129" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a0b934e8402df07bc4d19efa29c747094" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::get_module_weight</definition>
        <argsstring>(node_t v) const -&gt; int</argsstring>
        <name>get_module_weight</name>
        <param>
          <type>node_t</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="134" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="134" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1ab287e126909a3ec4828aa8b918278dc7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>auto</type>
        <definition>auto Netlist&lt; nodeview_t, nodemap_t &gt;::get_net_weight</definition>
        <argsstring>(node_t) const -&gt; index_t</argsstring>
        <name>get_net_weight</name>
        <param>
          <type>node_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="139" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="139" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a2af5b1868bbdaf81afa606ceb87f5c65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Netlist&lt; nodeview_t, nodemap_t &gt;::projection_down</definition>
        <argsstring>(gsl::span&lt; const uint8_t &gt; part, gsl::span&lt; uint8_t &gt; part_down)</argsstring>
        <name>projection_down</name>
        <param>
          <type>gsl::span&lt; const uint8_t &gt;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>gsl::span&lt; uint8_t &gt;</type>
          <declname>part_down</declname>
        </param>
        <briefdescription>
<para>projection down </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part_down</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="structNetlist_1a788a38d98a82eb6c802284479f3571ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Netlist&lt; nodeview_t, nodemap_t &gt;::projection_up</definition>
        <argsstring>(gsl::span&lt; const uint8_t &gt; part, gsl::span&lt; uint8_t &gt; part_up)</argsstring>
        <name>projection_up</name>
        <param>
          <type>gsl::span&lt; const uint8_t &gt;</type>
          <declname>part</declname>
        </param>
        <param>
          <type>gsl::span&lt; uint8_t &gt;</type>
          <declname>part_up</declname>
        </param>
        <briefdescription>
<para>projection up </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>part</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>part_up</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="191" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="structNetlist" kindref="compound">Netlist</ref>. </para>    </briefdescription>
    <detaileddescription>
<para><ref refid="structNetlist" kindref="compound">Netlist</ref> is implemented by <ref refid="classxn_1_1Graph" kindref="compound">xn::Graph</ref>, which is a networkx-like graph. </para>    </detaileddescription>
    <collaborationgraph>
      <node id="216">
        <label>std::unordered_map&lt; node_t, index_t &gt;</label>
      </node>
      <node id="207">
        <label>xn::Graph&lt; nodeview_t, nodemap_t &gt;</label>
        <link refid="classxn_1_1Graph"/>
        <childnode refid="208" relation="public-inheritance">
        </childnode>
        <childnode refid="211" relation="usage">
          <edgelabel>_node</edgelabel>
        </childnode>
        <childnode refid="212" relation="usage">
          <edgelabel>_node_map</edgelabel>
        </childnode>
        <childnode refid="209" relation="usage">
          <edgelabel>graph</edgelabel>
        </childnode>
      </node>
      <node id="217">
        <label>py::dict&lt; index_t, node_t &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="218" relation="public-inheritance">
        </childnode>
      </node>
      <node id="214">
        <label>std::unordered_set&lt; node_t  &gt;</label>
      </node>
      <node id="211">
        <label>nodeview_t</label>
      </node>
      <node id="208">
        <label>xn::object</label>
        <link refid="structxn_1_1object"/>
        <childnode refid="209" relation="public-inheritance">
        </childnode>
      </node>
      <node id="212">
        <label>nodemap_t</label>
      </node>
      <node id="210">
        <label>std::unordered_map&lt; const char *, std::any &gt;</label>
      </node>
      <node id="213">
        <label>py::set&lt; node_t &gt;</label>
        <link refid="classpy_1_1set"/>
        <childnode refid="214" relation="public-inheritance">
        </childnode>
      </node>
      <node id="209">
        <label>py::dict&lt; const char *, std::any &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="210" relation="public-inheritance">
        </childnode>
      </node>
      <node id="215">
        <label>py::dict&lt; node_t, index_t &gt;</label>
        <link refid="classpy_1_1dict"/>
        <childnode refid="216" relation="public-inheritance">
        </childnode>
      </node>
      <node id="206">
        <label>Netlist&lt; nodeview_t, nodemap_t &gt;</label>
        <link refid="structNetlist"/>
        <childnode refid="207" relation="usage">
          <edgelabel>G</edgelabel>
        </childnode>
        <childnode refid="211" relation="usage">
          <edgelabel>nets</edgelabel>
          <edgelabel>modules</edgelabel>
        </childnode>
        <childnode refid="213" relation="usage">
          <edgelabel>module_fixed</edgelabel>
        </childnode>
        <childnode refid="215" relation="usage">
          <edgelabel>node_up_map</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>node_down_map</edgelabel>
          <edgelabel>cluster_down_map</edgelabel>
        </childnode>
        <childnode refid="212" relation="usage">
          <edgelabel>module_map</edgelabel>
        </childnode>
      </node>
      <node id="218">
        <label>std::unordered_map&lt; index_t , node_t  &gt;</label>
      </node>
    </collaborationgraph>
    <location file="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" line="28" column="1" bodyfile="/media/lubuntu/USBDISK/github/ckpttncpp/lib/include/ckpttncpp/netlist.hpp" bodystart="27" bodyend="193"/>
    <listofallmembers>
      <member refid="structNetlist_1a8d56c1ac4b5e410083e2a8a2f3bf4e27" prot="public" virt="non-virtual"><scope>Netlist</scope><name>cluster_down_map</name></member>
      <member refid="structNetlist_1aeb5e40a9483ffe02e7e1d41cb33eab25" prot="public" virt="non-virtual"><scope>Netlist</scope><name>cost_model</name></member>
      <member refid="structNetlist_1a0a618339a3a4460512ad579fedaa9687" prot="public" virt="non-virtual"><scope>Netlist</scope><name>G</name></member>
      <member refid="structNetlist_1a5bbb91bea16e39dc6482f881087d034c" prot="public" virt="non-virtual"><scope>Netlist</scope><name>get_max_degree</name></member>
      <member refid="structNetlist_1a2b21ee258e768954f1cbd727d0999e4e" prot="public" virt="non-virtual"><scope>Netlist</scope><name>get_max_net_degree</name></member>
      <member refid="structNetlist_1a0b934e8402df07bc4d19efa29c747094" prot="public" virt="non-virtual"><scope>Netlist</scope><name>get_module_weight</name></member>
      <member refid="structNetlist_1ab287e126909a3ec4828aa8b918278dc7" prot="public" virt="non-virtual"><scope>Netlist</scope><name>get_net_weight</name></member>
      <member refid="structNetlist_1a7d521881f10cd7d43aca1d91a3d73e3e" prot="public" virt="non-virtual"><scope>Netlist</scope><name>graph_t</name></member>
      <member refid="structNetlist_1a752a1c071aba380890b4fbc3a158464c" prot="public" virt="non-virtual"><scope>Netlist</scope><name>has_fixed_modules</name></member>
      <member refid="structNetlist_1aeb21bf1fe4450507103a34030a5a8e4b" prot="public" virt="non-virtual"><scope>Netlist</scope><name>index_t</name></member>
      <member refid="structNetlist_1a973d4ee185bbae7699b17f68b3d5fbe9" prot="public" virt="non-virtual"><scope>Netlist</scope><name>max_degree</name></member>
      <member refid="structNetlist_1a09c473422ba65c7da98bdd82804280cf" prot="public" virt="non-virtual"><scope>Netlist</scope><name>max_net_degree</name></member>
      <member refid="structNetlist_1a8cb2a3e85767c3d3f88bfa8e7b609b4e" prot="public" virt="non-virtual"><scope>Netlist</scope><name>module_fixed</name></member>
      <member refid="structNetlist_1ab8941d35dbf7f69656e971fedfd1e6a7" prot="public" virt="non-virtual"><scope>Netlist</scope><name>module_map</name></member>
      <member refid="structNetlist_1ae1cb24c1c567ec7c7466d775a3f285a0" prot="public" virt="non-virtual"><scope>Netlist</scope><name>module_weight</name></member>
      <member refid="structNetlist_1af12f7838a6564bff0eb2b78141ed0aab" prot="public" virt="non-virtual"><scope>Netlist</scope><name>modules</name></member>
      <member refid="structNetlist_1a610efd394015a1def21f15b5e82414f7" prot="public" virt="non-virtual"><scope>Netlist</scope><name>net_weight</name></member>
      <member refid="structNetlist_1a5e37df4e70871080e039bc333f0f8059" prot="public" virt="non-virtual"><scope>Netlist</scope><name>Netlist</name></member>
      <member refid="structNetlist_1a2b58c519ca5858ffaba288d753e01d11" prot="public" virt="non-virtual"><scope>Netlist</scope><name>Netlist</name></member>
      <member refid="structNetlist_1a576d01038432710d1577bb04cbb14606" prot="public" virt="non-virtual"><scope>Netlist</scope><name>nets</name></member>
      <member refid="structNetlist_1aeaf08cf2962212cbbbbdd82fa34370ee" prot="public" virt="non-virtual"><scope>Netlist</scope><name>node_down_map</name></member>
      <member refid="structNetlist_1a3398076ea8fced0b669d842494d37bbe" prot="public" virt="non-virtual"><scope>Netlist</scope><name>node_t</name></member>
      <member refid="structNetlist_1aff5dd1ecd49a357d4117e5286bc66c9f" prot="public" virt="non-virtual"><scope>Netlist</scope><name>node_up_map</name></member>
      <member refid="structNetlist_1aefc9092190d109d97412ad54a6447d22" prot="public" virt="non-virtual"><scope>Netlist</scope><name>num_modules</name></member>
      <member refid="structNetlist_1aa2aba7e79db50af55a2444034e286439" prot="public" virt="non-virtual"><scope>Netlist</scope><name>num_nets</name></member>
      <member refid="structNetlist_1ae42f6ee8ccbf9803db680004451cf593" prot="public" virt="non-virtual"><scope>Netlist</scope><name>num_pads</name></member>
      <member refid="structNetlist_1a95539d9ee2a37778d98a227807c87463" prot="public" virt="non-virtual"><scope>Netlist</scope><name>number_of_modules</name></member>
      <member refid="structNetlist_1ae8d9cbdede320c06248a44e9b492d3c4" prot="public" virt="non-virtual"><scope>Netlist</scope><name>number_of_nets</name></member>
      <member refid="structNetlist_1a2030766bdbe5582228f08d4dd40f0162" prot="public" virt="non-virtual"><scope>Netlist</scope><name>number_of_nodes</name></member>
      <member refid="structNetlist_1ae9addfb366296964d2466864a228b89f" prot="public" virt="non-virtual"><scope>Netlist</scope><name>parent</name></member>
      <member refid="structNetlist_1a2af5b1868bbdaf81afa606ceb87f5c65" prot="public" virt="non-virtual"><scope>Netlist</scope><name>projection_down</name></member>
      <member refid="structNetlist_1a788a38d98a82eb6c802284479f3571ed" prot="public" virt="non-virtual"><scope>Netlist</scope><name>projection_up</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
